// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// best_cut_node
List best_cut_node(char method, NumericMatrix Data, NumericVector Labels, NumericVector W, int minleaf, int num_labels);
RcppExport SEXP _ppRF_best_cut_node(SEXP methodSEXP, SEXP DataSEXP, SEXP LabelsSEXP, SEXP WSEXP, SEXP minleafSEXP, SEXP num_labelsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< char >::type method(methodSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Labels(LabelsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type minleaf(minleafSEXP);
    Rcpp::traits::input_parameter< int >::type num_labels(num_labelsSEXP);
    rcpp_result_gen = Rcpp::wrap(best_cut_node(method, Data, Labels, W, minleaf, num_labels));
    return rcpp_result_gen;
END_RCPP
}
// ppCARTPredict
CharacterVector ppCARTPredict(NumericMatrix Data, NumericMatrix nodeRotaMat, NumericVector nodeCutValue, NumericVector childNode, CharacterVector nodeLabel);
RcppExport SEXP _ppRF_ppCARTPredict(SEXP DataSEXP, SEXP nodeRotaMatSEXP, SEXP nodeCutValueSEXP, SEXP childNodeSEXP, SEXP nodeLabelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nodeRotaMat(nodeRotaMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nodeCutValue(nodeCutValueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type childNode(childNodeSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type nodeLabel(nodeLabelSEXP);
    rcpp_result_gen = Rcpp::wrap(ppCARTPredict(Data, nodeRotaMat, nodeCutValue, childNode, nodeLabel));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ppRF_best_cut_node", (DL_FUNC) &_ppRF_best_cut_node, 6},
    {"_ppRF_ppCARTPredict", (DL_FUNC) &_ppRF_ppCARTPredict, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ppRF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
