% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BestCutNode.R
\name{BestCutNode}
\alias{BestCutNode}
\title{find  best split variable and node.}
\usage{
BestCutNode(
  X,
  y,
  type = "g-classification",
  weights = 1,
  MinLeaf = ifelse(type == "regression", 5, 1),
  numLabels = ifelse(type == "regression", 0, length(unique(y)))
)
}
\arguments{
\item{X}{: an n by d numeric matrix (preferable) or data frame.}

\item{y}{: a n vector.}

\item{weights}{: a vector of values which weigh the samples when considering a split}

\item{MinLeaf}{: the minimum amount of samples in a leaf}

\item{numLabels}{: the number of categories}

\item{method}{: the criterion used for splitting the nodes
'g-classification' : gini impurity index (classification, default)
'i-classification' : information gain (classification)
'regression' : mean square error (regression)}
}
\value{
a list which contains:
\itemize{
\item BestCutVar: the best split variable
\item BestCutVal: the best split point for the best split variable.
\item BestIndex: Each variable corresponds to the min gini impurity index(method='g-classification'),
the max information gain(method='i-classification') and the min squared error(method='regression')
}
}
\description{
find  best split variable and node.
}
\examples{
### Find the best split variable ###
library(ppRF)
X=as.matrix(iris[, 1:4])
y=iris[[5L]]

bestcut=BestCutNode(X,y,method='g-classification')
print(bestcut)
}
