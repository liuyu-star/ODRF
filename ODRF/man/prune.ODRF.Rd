% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prune_ODRF.R
\name{prune.ODRF}
\alias{prune.ODRF}
\title{Pruning of class \code{ODRF}.}
\usage{
\method{prune}{ODRF}(ppForest, data, MaxDepth = 1, useOOB = TRUE)
}
\arguments{
\item{data}{validation data of class \code{data.frame} is used to prune the object of class \code{ODRF}. Note that when \code{useOOB=TRUE}, \code{data} must be the training data \code{data} in \code{\link{ODRF}}}

\item{MaxDepth}{The maximum depth of the tree after pruning. (Default 1)}

\item{useOOB}{Whether to use OOB for pruning. (Default TRUE)}

\item{obj}{an object of class \code{\link{ODRF}}.}
}
\value{
\itemize{an object of class \code{ODRF} and \code{prune.ODRF}. 
\item{\code{ppForest} The same result as \code{ODRF}.}
\item{\code{pruneError} Error of validation data or OOB () after each pruning in each tree, classification error rate for classification or mean square error for regression.}
}
}
\description{
Prune \code{ODRF} from bottom to top with validation data based on prediction error.
}
\examples{
#Classification with Oblique Decision Tree
data(seeds)
set.seed(221212)
train = sample(1:209,100)
train_data = data.frame(seeds[train,])
test_data = data.frame(seeds[-train,])

tree = ODRF(varieties_of_wheat~.,train_data[seq(floor(nrow(train_data)/2)),],type='i-classification')
tree = prune(tree,train_data[-seq(floor(nrow(train_data)/2)),])
pred <- predict(tree,test_data[,-8])
#estimation error
(mean(pred!=test_data[,8]))

#Regression with Oblique Decision Tree
data(body_fat)
set.seed(221212)
train = sample(1:252,100)
train_data = data.frame(body_fat[train,])
test_data = data.frame(body_fat[-train,])

tree = ODRF(Density~.,train_data[seq(floor(nrow(train_data)/2)),],type='regression')
tree = prune(tree,train_data[-seq(floor(nrow(train_data)/2)),])
pred <- predict(tree,test_data[,-8])
#estimation error
mean((pred-test_data[,1])^2)

}
\seealso{
\code{\link{ODRF}} \code{\link{prune.ODT}}
}
