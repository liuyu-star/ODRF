% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/best_cut_node.R
\name{best.cut.node}
\alias{best.cut.node}
\title{Find  best split variable and node.}
\usage{
best.cut.node(
  X,
  y,
  type = "i-classification",
  weights = 1,
  MinLeaf = ifelse(type == "regression", 5, 1),
  numLabels = ifelse(type == "regression", 0, length(unique(y)))
)
}
\arguments{
\item{X}{An n by d numeric matrix (preferable) or data frame.}

\item{y}{a n vector.}

\item{type}{The criterion used for splitting the variable. 'i-classification': information gain (classification, default), 
'g-classification': gini impurity index (classification) or 'regression': mean square error (regression).}

\item{weights}{a vector of values which weigh the samples when considering a split.}

\item{MinLeaf}{the minimum amount of samples in a leaf.}

\item{numLabels}{the number of categories.}
}
\value{
a list which contains:
\itemize{
\item BestCutVar: the best split variable.
\item BestCutVal: the best split point for the best split variable.
\item BestIndex: Each variable corresponds to the min gini impurity index(method='g-classification'),
the max information gain(method='i-classification') or the min squared error(method='regression').
}
}
\description{
Three criterion functions for splitting variables.
}
\examples{
### Find the best split variable ###
data(iris)
X=as.matrix(iris[, 1:4])
y=iris[[5L]]
bestcut=best.cut.node(X,y,type='i-classification')
print(bestcut)

}
